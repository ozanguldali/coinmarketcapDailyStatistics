# Returns
#   TRUE if thinbks it is a date
tryCatch(!is.na(as.Date(mydate, date.format)),
error = function(err) {FALSE})
}
IsDate("1/3/2015")
IsDate("01/03/2015")
IsDate("01-03-2015")
IsDate <- function(mydate, date.format = "%d-%m-%y") {
# Check if field is a date using as.Date that looks for unambiguous dates
#   Assumes date format so NA returned not Character error.
#   Why? with no date format, R tries two defaults then gives error.
#   BUT With a dateformat R returns NA
# Args
#   Suspected date and optional date format string
# Returns
#   TRUE if thinbks it is a date
tryCatch(!is.na(as.Date(mydate, date.format)),
error = function(err) {FALSE})
}
IsDate("01-03-2015")
IsDate <- function(mydate, date.format = "%y-%m-%d") {
# Check if field is a date using as.Date that looks for unambiguous dates
#   Assumes date format so NA returned not Character error.
#   Why? with no date format, R tries two defaults then gives error.
#   BUT With a dateformat R returns NA
# Args
#   Suspected date and optional date format string
# Returns
#   TRUE if thinbks it is a date
tryCatch(!is.na(as.Date(mydate, date.format)),
error = function(err) {FALSE})
}
IsDate("01-03-2015")
IsDate("2015-03-01")
IsDate <- function(mydate, date.format = "%Y-%m-%d") {
# Check if field is a date using as.Date that looks for unambiguous dates
#   Assumes date format so NA returned not Character error.
#   Why? with no date format, R tries two defaults then gives error.
#   BUT With a dateformat R returns NA
# Args
#   Suspected date and optional date format string
# Returns
#   TRUE if thinbks it is a date
tryCatch(!is.na(as.Date(mydate, date.format)),
error = function(err) {FALSE})
}
IsDate("2015-03-01")
IsDate("2015-03-01")
isDate <- IsDate("2015-03-01")
isDate
IsDate("2015-03-32")
IsDate("2015-03-316")
IsDate <- function(mydate, date.format = "%Y-%M-%D") {
return (tryCatch(!is.na(as.Date(mydate, date.format)),
error = function(err) {FALSE}) )
}
IsDate("2015-03-316")
IsDate("2015-03-31")
IsDate("2015-03-30")
IsDate("2015-03-08")
IsDate <- function(mydate, date.format = "%yyyy-%mm-%dd") {
return (tryCatch(!is.na(as.Date(mydate, date.format)),
error = function(err) {FALSE}) )
}
IsDate("2015-03-08")
IsDate("2015-3-8")
IsDate <- function(mydate, date.format = "%Y-%m-%d") {
return (tryCatch(!is.na(as.Date(mydate, date.format)),
error = function(err) {FALSE}) )
}
IsDate("2015-3-8")
IsDate("2015-3-32")
IsDate("2015-3-328")
IsDate <- function(mydate, date.format = "%Y-%m-%d") {
return (tryCatch(!is.na(as.Date(as.character(mydate), date.format)),
error = function(err) {FALSE}) )
}
IsDate("2015-3-328")
IsDate("2015-3-32")
IsDate("2015-3-8")
IsDate("2015-03-08")
IsDate("2015-04-31")
IsDate("2015-04-30")
source('getDesiredDateInterval.R')
"2018-03-01" > "2018-03-02"
"2018-03-01" > "2018-02-28"
TRUE | TRUE
TRUE || TRUE
TRUE | FALSE
TRUE || FALSE
FALSE | FALSE
FALSE || FALSE
isDateLess_end <- strEnd <= endDate_limit
endDate_limit <- Sys.Date()
isDateLess_end <- strEnd <= endDate_limit
isDateLess_end
strEnd => startDate_limit
source('getDesiredDateInterval.R')
source('getDesiredDateInterval.R')
source('application.R')
source('application.R')
hg覺yh覺oyho覺uj
tgyhujkl
demo
demo
demo()
application.R
application.R
demo()
source('application.R')
32
source('application.R')
source('application.R')
source('application.R')
source('C:/Users/TOSHIBA/Desktop/bitirme/coinmarketcapDailyStatistics/getDesiredDateInterval.R', echo=TRUE)
source('C:/Users/TOSHIBA/Desktop/bitirme/coinmarketcapDailyStatistics/getDesiredDateInterval.R', echo=TRUE)
source('C:/Users/TOSHIBA/Desktop/bitirme/coinmarketcapDailyStatistics/getDesiredDateInterval.R', echo=TRUE)
source('C:/Users/TOSHIBA/Desktop/bitirme/coinmarketcapDailyStatistics/getDesiredDateInterval.R', echo=TRUE)
debugSource('C:/Users/TOSHIBA/Desktop/bitirme/coinmarketcapDailyStatistics/getDesiredDateInterval.R', echo=TRUE)
source('C:/Users/TOSHIBA/Desktop/bitirme/coinmarketcapDailyStatistics/getDesiredDateInterval.R', echo=TRUE)
IsDate("2018-02-30")
as.Date("2018-02-30")
inherits("2018-02-30", "Date")
inherits("2018/02/30", "Date")
inherits("2018/02/29", "Date")
inherits("2018/02/28", "Date")
inherits("2018-02-28", "Date")
help("inherits")
inherits("2018-02-28", "Date")
today <- Sys.Date()
inherits(today, "Date")
inherits("2018-03-16", "Date")
inherits(as.Date("2018-03-16"), "Date")
inherits(as.Date("2018-03-31"), "Date")
inherits(as.Date("2018-02-31"), "Date")
source('C:/Users/TOSHIBA/Desktop/bitirme/coinmarketcapDailyStatistics/formatControl.R', echo=TRUE)
IsDate("2018-02-30")
source('C:/Users/TOSHIBA/Desktop/bitirme/coinmarketcapDailyStatistics/getDesiredDateInterval.R', echo=TRUE)
source('C:/Users/TOSHIBA/Desktop/bitirme/coinmarketcapDailyStatistics/getDesiredDateInterval.R', echo=TRUE)
load("C:/Users/TOSHIBA/Desktop/bitirme/coinmarketcapDailyStatistics/20180227-20180318_coins_df.RData")
rm(list = ls()[!grep("-coins_df", ls())])
rm(list = ls()[!grep("T", ls())])
rm(list = grep("-coins_df^", ls(), value = TRUE, invert = TRUE))
load("C:/Users/TOSHIBA/Desktop/bitirme/coinmarketcapDailyStatistics/20180227-20180318_coins_df.RData")
rm(list = grep("-coins_df", ls(), value = TRUE, invert = TRUE))
save.image("C:/Users/TOSHIBA/Desktop/20180227-20180318_coins_df.RData")
source('application.R')
source('application.R')
View(`20180407-coins_df`)
daily_coins_df
source('application.R')
source('application.R')
source('application.R')
source('application.R')
source('application.R')
load("C:/Users/TOSHIBA/Desktop/bitirme/coinmarketcapDailyStatistics/20180227-20180407_coins_df.RData")
View(daily_coins_df)
source('application.R')
View(`20180227-coins_df`)
clear
source('src/application.R')
source('src/run/application.R')
source('src/run/application.R')
source('src/run/application.R')
source('src/run/application.R')
source('src/run/application.R')
create.project(template='minimal')
install.packages('ProjectTemplate')
create.project(template='minimal')
library('ProjectTemplate')
create.project(template='minimal')
library('ProjectTemplate')
create.project(template='minimal')
devtools::install_github('johnmyleswhite/ProjectTemplate')
source('src/run/application.R')
View('src/run/application')
source('src/run/application.R')
yrange <- coin_df_name$price
coin_df_name
xrange <- get(coin_df_name)$RecordDates
yrange <- get(coin_df_name)$price
yrange <- get(coin_df_name)$Price
length(yrange)
source('C:/Users/ASUS-/Desktop/bitirme/coinmarketcapDailyStatistics/src/run/puts/graphPRoject.R', echo=TRUE)
source('C:/Users/ASUS-/Desktop/bitirme/coinmarketcapDailyStatistics/src/run/puts/graphPRoject.R', echo=TRUE)
source('C:/Users/ASUS-/Desktop/bitirme/coinmarketcapDailyStatistics/src/run/puts/graphPRoject.R', echo=TRUE)
source('C:/Users/ASUS-/Desktop/bitirme/coinmarketcapDailyStatistics/src/run/puts/graphPRoject.R', echo=TRUE)
source('C:/Users/ASUS-/Desktop/bitirme/coinmarketcapDailyStatistics/src/run/puts/graphPRoject.R', echo=TRUE)
source('C:/Users/ASUS-/Desktop/bitirme/coinmarketcapDailyStatistics/src/run/puts/graphPRoject.R', echo=TRUE)
source('C:/Users/ASUS-/Desktop/bitirme/coinmarketcapDailyStatistics/src/run/puts/graphPRoject.R', echo=TRUE)
source('C:/Users/ASUS-/Desktop/bitirme/coinmarketcapDailyStatistics/src/run/puts/graphPRoject.R', echo=TRUE)
source('C:/Users/ASUS-/Desktop/bitirme/coinmarketcapDailyStatistics/src/run/puts/graphPRoject.R', echo=TRUE)
source('C:/Users/ASUS-/Desktop/bitirme/coinmarketcapDailyStatistics/src/run/puts/graphPRoject.R', echo=TRUE)
source('C:/Users/ASUS-/Desktop/bitirme/coinmarketcapDailyStatistics/src/run/puts/graphPRoject.R', echo=TRUE)
source('C:/Users/ASUS-/Desktop/bitirme/coinmarketcapDailyStatistics/src/run/puts/graphPRoject.R', echo=TRUE)
View(get(coin_df_name))
source('C:/Users/ASUS-/Desktop/bitirme/coinmarketcapDailyStatistics/src/run/puts/graphPRoject.R', echo=TRUE)
source('C:/Users/ASUS-/Desktop/bitirme/coinmarketcapDailyStatistics/src/run/puts/graphPRoject.R', echo=TRUE)
source('C:/Users/ASUS-/Desktop/bitirme/coinmarketcapDailyStatistics/src/run/puts/graphPRoject.R', echo=TRUE)
source('src/run/application.R')
source('C:/Users/TOSHIBA/Desktop/bitirme/r2html/second.R', echo=TRUE)
source('C:/Users/TOSHIBA/Desktop/bitirme/r2html/second.R', echo=TRUE)
source('src/run/application.R')
source('src/run/application.R')
source('src/run/application.R')
source('C:/Users/TOSHIBA/Desktop/bitirme/coinmarketcapDailyStatistics/src/run/puts/dataframe/resultProject.R', echo=TRUE)
source('C:/Users/TOSHIBA/Desktop/bitirme/coinmarketcapDailyStatistics/src/run/puts/dataframe/resultProject.R', echo=TRUE)
source('C:/Users/TOSHIBA/Desktop/bitirme/coinmarketcapDailyStatistics/src/run/puts/dataframe/resultProject.R', echo=TRUE)
source('C:/Users/TOSHIBA/Desktop/bitirme/coinmarketcapDailyStatistics/src/run/puts/dataframe/resultProject.R', echo=TRUE)
source('C:/Users/TOSHIBA/Desktop/bitirme/coinmarketcapDailyStatistics/src/run/puts/dataframe/resultProject.R', echo=TRUE)
source('C:/Users/TOSHIBA/Desktop/bitirme/coinmarketcapDailyStatistics/src/run/puts/dataframe/resultProject.R', echo=TRUE)
source('C:/Users/TOSHIBA/Desktop/bitirme/coinmarketcapDailyStatistics/src/run/puts/dataframe/resultProject.R', echo=TRUE)
source('C:/Users/TOSHIBA/Desktop/bitirme/coinmarketcapDailyStatistics/src/run/puts/dataframe/resultProject.R', echo=TRUE)
source('C:/Users/TOSHIBA/Desktop/bitirme/coinmarketcapDailyStatistics/src/run/puts/dataframe/resultProject.R', echo=TRUE)
c1 <- c('a','h覺d','hg','y')
c2 <- c('tg','hak','ty','oa')
for i in 1:4
a[1,i] <- c1[i]
for i in 1:4
a[2,i] <- c2[i]
print(a)
sort(a, decreasing = TRUE)
for (i in 1:4){}
for (i in 1:4){
a[1][i] <- c1[i]
a[2][i] <- c2[i]
}
a
a <- 3
for (i in 1:4){
a[1][i] <- c1[i]
a[2][i] <- c2[i]
}
for (i in 1:4){
a(1,i) <- c1[i]
a(2,i) <- c2[i]
}
for (i in 1:4){
a(1,i) <- c1(i)
a(2,i) <- c2(i)
}
c1(1)
c1
c1(1,1)
c1[1]
a(1,1)
sort(get(coin_df_name), descending = TRUE)
sort(get(coin_df_name), decreasing =  TRUE)
sort(get(coin_df_name)$RecordDates, decreasing =  TRUE)
View(get(coin_df_name)[sort(get(coin_df_name)$RecordDates, decreasing =  TRUE),])
source('src/run/application.R')
source('src/run/application.R')
install.packages('rvest')
source('src/run/application.R')
source('src/run/application.R')
source('src/run/application.R')
source('src/run/application.R')
source('src/run/application.R')
source('src/run/application.R')
debugSource('src/run/application.R')
debugSource('src/run/application.R')
View(new_df)
}
for (i in (initialValue_result+1):length(dfList)) {
if ( calledCoin %in% get(dfList[i])$CoinName ) {
dfListDate <- paste( substring(paste(substring(dfList[i], c(1,5), c(4,8)), collapse="-"), c(1,8), c(7,9)), collapse = "-" )
marketCapList[i] <- get(dfList[i])[get(dfList[i])$CoinName==calledCoin, "MarketCap"]
priceList[i] <- get(dfList[i])[get(dfList[i])$CoinName==calledCoin, "Price"]
volume24hList[i] <- get(dfList[i])[get(dfList[i])$CoinName==calledCoin, "Volume24h"]
dailyChangeList[i] <- ( as.numeric(as.character(priceList[i])) * 100 ) / as.numeric(as.character(priceList[i-1]))
temp_df <- data.frame( RecordDates = dfListDate,
MarketCap = marketCapList[i],
Price = priceList[i],
Volume24h = volume24hList[i],
DailyChange = paste(dailyChangeList[i], "%", sep = ""))
names(temp_df) <- c("RecordDates", "MarketCap", "Price", "Volume24h", "DailyChange")
new_df <- rbind(new_df, temp_df)
} else {
next
}
}
for (i in (initialValue_result+1):length(dfList)) {
if ( calledCoin %in% get(dfList[i])$CoinName ) {
dfListDate <- paste( substring(paste(substring(dfList[i], c(1,5), c(4,8)), collapse="-"), c(1,8), c(7,9)), collapse = "-" )
marketCapList[i] <- get(dfList[i])[get(dfList[i])$CoinName==calledCoin, "MarketCap"]
priceList[i] <- get(dfList[i])[get(dfList[i])$CoinName==calledCoin, "Price"]
volume24hList[i] <- get(dfList[i])[get(dfList[i])$CoinName==calledCoin, "Volume24h"]
dailyChangeList[i] <- ( as.numeric(as.character(priceList[i])) * 100 ) / as.numeric(as.character(priceList[i-1]))
temp_df <- data.frame( RecordDates = dfListDate,
MarketCap = marketCapList[i],
Price = priceList[i],
Volume24h = volume24hList[i],
DailyChange = paste(dailyChangeList[i], "%", sep = ""))
names(temp_df) <- c("RecordDates", "MarketCap", "Price", "Volume24h", "DailyChange")
new_df <- rbind(new_df, temp_df)
} else {
next
}
}
dfListDate <- paste( substring(paste(substring(dfList[i], c(1,5), c(4,8)), collapse="-"), c(1,8), c(7,9)), collapse = "-" )
marketCapList <- vector("list", length = length(dfList))
marketCapList[i] <- get(dfList[i])[get(dfList[i])$CoinName==calledCoin, "MarketCap"]
priceList[i] <- get(dfList[i])[get(dfList[i])$CoinName==calledCoin, "Price"]
source('src/run/application.R')
warnings()
get(dfList[3])[get(dfList[3])$CoinName==calledCoin, "Price"]
tryNew <- get(dfList[3])[get(dfList[3])$CoinName==calledCoin, "Price"]
as.numeric(tryNew)
as.numeric(as.character(tryNew))
tryNew2 <- get(dfList[4])[get(dfList[4])$CoinName==calledCoin, "Price"]
tryNew2
changePer <- tryNew2*100/tryNew
changePer
changePer <- as.numeric(as.character(tryNew2))*100/as.numeric(as.character(tryNew))
changePer
dfListDate <- paste( substring(paste(substring(dfList[i], c(1,5), c(4,8)), collapse="-"), c(1,8), c(7,9)), collapse = "-" )
marketCapList <- vector("list", length = length(dfList))
marketCapList[i] <- get(dfList[i])[get(dfList[i])$CoinName==calledCoin, "MarketCap"]
priceList <- vector("list", length = length(dfList))
priceList[i] <- get(dfList[i])[get(dfList[i])$CoinName==calledCoin, "Price"]
volume24hList <- vector("list", length = length(dfList))
volume24hList[i] <- get(dfList[i])[get(dfList[i])$CoinName==calledCoin, "Volume24h"]
dailyChangeList <- vector("list", length = length(dfList))
View(dailyChangeList)
dailyChangeList <- vector("list", length = length(dfList))
dailyChangeList[i] <- priceList[i] * 100 / priceList[i-1]
dailyChangeList[i] <- as.numeric(priceList[i]) * 100 / as.numeric(priceList[i-1])
dailyChangeList[i] <- as.numeric(as.character(priceList[i])) * 100 / as.numeric(as.character(priceList[i-1]))
dailyChangeList[i] <- as.numeric(priceList[[i]]) * 100 / as.numeric(priceList[[i-1]])
dailyChangeList <- vector("list", length = length(dfList))
dailyChangeList[i] <- as.numeric(priceList[[i]]) * 100 / as.numeric(priceList[[i-1]])
dailyChangeList <- vector("list", length = length(dfList))
dailyChangeList[i] <- as.double(priceList[i]) * 100 / as.double(priceList[i-1])
dailyChangeList <- vector("list", length = length(dfList))
dailyChangeList[i] <- as.double(as.character(priceList[i])) * 100 / as.double(as.character(priceList[i-1]))
dailyChangeList <- vector("list", length = length(dfList))
dailyChangeList[i] <- as.numeric(unlist(priceList[i])) * 100 / as.numeric(unlist(priceList[i-1]))
dailyChangeList <- vector("list", length = length(dfList))
dailyChangeList[i] <- as.numeric(unlist(priceList)[i]) * 100 / as.numeric(unlist(priceList)[i-1])
View(dailyChangeList)
dailyChangeList <- vector("list", length = length(dfList))
View(dailyChangeList)
dailyChangeList[i] <- as.numeric(unlist(priceList)[i]) * 100 / as.numeric(unlist(priceList)[i-1])
View(dailyChangeList)
unlist(priceList)
unlist(priceList[i])
unlist(priceList[i-1])
priceList[i-1]
priceList
debugSource('src/run/application.R')
View(priceList)
debugSource('src/run/application.R')
debugSource('src/run/application.R')
View(priceList)
priceList[[1]]
priceList[1]
priceList
temp_df
new_df
get(dfList[i])[get(dfList[5])$CoinName==calledCoin, "Price"]
get(dfList[5])[get(dfList[5])$CoinName==calledCoin, "Price"]
priceList[1]
priceList[5]
priceList[5] <- get(dfList[5])[get(dfList[5])$CoinName==calledCoin, "Price"]
priceList[5]
dfListDate <- paste( substring(paste(substring(dfList[i], c(1,5), c(4,8)), collapse="-"), c(1,8), c(7,9)), collapse = "-" )
marketCapList <- vector("list", length = length(dfList))
marketCapList[i] <- get(dfList[i])[get(dfList[i])$CoinName==calledCoin, "MarketCap"]
priceList <- vector("list", length = length(dfList))
View(priceList)
priceList[i] <- get(dfList[i])[get(dfList[i])$CoinName==calledCoin, "Price"]
View(priceList)
priceList <- vector("list", length = length(dfList))
View(priceList)
repeatValue_result <- TRUE
initialValue_result <- 1
while( repeatValue_result ) {
coin_df_name <- paste(calledCoin, "df", sep = "-")
if ( calledCoin %in% get(dfList[initialValue_result])$CoinName ) {
dfListDate <- paste( substring(paste(substring(dfList[initialValue_result], c(1,5), c(4,8)), collapse="-"), c(1,8), c(7,9)), collapse = "-" )
marketCapInit <- get(dfList[initialValue_result])[get(dfList[initialValue_result])$CoinName==calledCoin, "MarketCap"]
priceInit <- get(dfList[initialValue_result])[get(dfList[initialValue_result])$CoinName==calledCoin, "Price"]
dailyChangeInit <- get(dfList[initialValue_result])[get(dfList[initialValue_result])$CoinName==calledCoin, "Volume24h"]
new_df <- data.frame( dfListDate,
marketCapInit,
priceInit,
dailyChangeInit,
"-")
names(new_df) <- c("RecordDates", "MarketCap", "Price", "Volume24h", "DailyChange")
repeatValue_result <- FALSE
} else {
initialValue_result <- initialValue_result + 1
repeatValue_result <- TRUE
}
}
for (i in (initialValue_result+1):length(dfList)) {
if ( calledCoin %in% get(dfList[i])$CoinName ) {
dfListDate <- paste( substring(paste(substring(dfList[i], c(1,5), c(4,8)), collapse="-"), c(1,8), c(7,9)), collapse = "-" )
marketCapList <- vector("list", length = length(dfList))
marketCapList[i] <- get(dfList[i])[get(dfList[i])$CoinName==calledCoin, "MarketCap"]
priceList <- vector("list", length = length(dfList))
priceList[i] <- get(dfList[i])[get(dfList[i])$CoinName==calledCoin, "Price"]
volume24hList <- vector("list", length = length(dfList))
volume24hList[i] <- get(dfList[i])[get(dfList[i])$CoinName==calledCoin, "Volume24h"]
dailyChangeList <- vector("list", length = length(dfList))
dailyChangeList[i] <- priceList[i] * 100 / priceList[i-1]
temp_df <- data.frame( RecordDates = dfListDate,
MarketCap = marketCapList[i],
Price = priceList[i],
Volume24h = volume24hList[i],
DailyChange = paste(dailyChangeList[i], "%", sep = ""))
names(temp_df) <- c("RecordDates", "MarketCap", "Price", "Volume24h", "DailyChange")
new_df <- rbind(new_df, temp_df)
} else {
next
}
}
View(new_df)
View(temp_df)
View(priceList)
View(`Bitcoin-df`)
dfListDate <- paste( substring(paste(substring(dfList[i], c(1,5), c(4,8)), collapse="-"), c(1,8), c(7,9)), collapse = "-" )
marketCapList <- vector("list", length = length(dfList))
marketCapList[i] <- get(dfList[i])[get(dfList[i])$CoinName==calledCoin, "MarketCap"]
priceList <- vector("list", length = length(dfList))
priceList[i] <- get(dfList[i])[get(dfList[i])$CoinName==calledCoin, "Price"]
View(priceList)
volume24hList <- vector("list", length = length(dfList))
volume24hList[i] <- get(dfList[i])[get(dfList[i])$CoinName==calledCoin, "Volume24h"]
dailyChangeList <- vector("list", length = length(dfList))
dailyChangeList[i] <- priceList[i] .* 100 ./ priceList[i-1]
priceList[i] <- get(dfList[i])[get(dfList[i])$CoinName==calledCoin, "Price"]
source('src/run/application.R')
class(priceList[i])
class(lapply(priceList[i], as.numeric))
class(priceList[[i])
class(priceList[[i]])
source('src/run/application.R')
class(priceList[6])
class(priceList[12])
class(priceList[1])
class(priceList[45])
class(priceList[[45]])
class(priceList[[1]])
class(priceList[[21]])
class(priceList[[3]])
class(priceList[[5]])
class(priceList[4])
class(priceList[44])
class(priceList[46])
View(priceList)
priceList[[4]]
class(get(dfList[3])[get(dfList[3])$CoinName==calledCoin, "Price"])
for(i in 2:45){
class(get(dfList[i])[get(dfList[i])$CoinName==calledCoin, "Price"])
}
for(i in 2:45){
classtry <- class(get(dfList[i])[get(dfList[i])$CoinName==calledCoin, "Price"])
}
classtry
for (i in (initialValue_result+1):length(dfList)) {
if ( calledCoin %in% get(dfList[i])$CoinName ) {
dfListDate <- paste( substring(paste(substring(dfList[i], c(1,5), c(4,8)), collapse="-"), c(1,8), c(7,9)), collapse = "-" )
marketCapList <- vector("list", length = length(dfList))
marketCapList[i] <- get(dfList[i])[get(dfList[i])$CoinName==calledCoin, "MarketCap"]
priceList <- c()
priceList[[i]] <- get(dfList[i])[get(dfList[i])$CoinName==calledCoin, "Price"]
volume24hList <- vector("list", length = length(dfList))
volume24hList[i] <- get(dfList[i])[get(dfList[i])$CoinName==calledCoin, "Volume24h"]
dailyChangeList <- c()
dailyChangeList[[i]] <- priceList[[i]] * 100 / priceList[[i-1]]
temp_df <- data.frame( RecordDates = dfListDate,
MarketCap = marketCapList[i],
Price = priceList[i],
Volume24h = volume24hList[i],
DailyChange = paste(dailyChangeList[i], "%", sep = ""))
names(temp_df) <- c("RecordDates", "MarketCap", "Price", "Volume24h", "DailyChange")
new_df <- rbind(new_df, temp_df)
} else {
next
}
}
mylist <- c()
mylist[[1]] <- 3
mylist
mylist[[2]] <- 6
mylist
source('src/run/application.R')
View(priceList)
priceList[4]
priceList[[4]
]
priceList
source('src/run/application.R')
dailyChange <- get(dfList[5])[get(dfList[5])$CoinName==calledCoin, "Price"] * 100 / get(dfList[5-1])[get(dfList[5-1])$CoinName==calledCoin, "Price"]
typeof(dailyChange)
double(length = 0)
double(length = 3)
dailyChange
format(round(dailyChange, 3), nsmall = 3)
doublevar <- 562374.7682349024
format(round(doublevar, 3), nsmall = 3)
format(round(doublevar, 2), nsmall = 5)
source('src/run/application.R')
source('src/run/application.R')
typeof(dailyChangeNext)
as.numeric(dailyChangeNext)
dailyChangeNew <- as.numeric(dailyChangeNext)
typeof(dailyChangeNew)
source('src/run/application.R')
source('src/run/application.R')
